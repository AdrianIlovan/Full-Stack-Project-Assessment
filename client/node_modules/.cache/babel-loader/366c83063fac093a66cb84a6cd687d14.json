{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adria\\\\Desktop\\\\Code Your Future Stuff\\\\GitHub Cloned Repositories\\\\Full-Stack-Project-Assessment\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport VideosList from './VideosList';\nimport AddVideo from './AddVideo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [videos, setVideos] = useState([]);\n\n  const handleVote = (id, direction) => {// Implement the logic to update the vote count for the video with the given id\n  };\n\n  const handleRemove = id => {// Implement the logic to remove the video with the given id from the list\n  };\n\n  const handleAddVideo = newVideo => {// Implement the logic to add a new video to the list\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Video Recommendation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddVideo, {\n      handleAddVideo: handleAddVideo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VideosList, {\n      videos: videos,\n      handleVote: handleVote,\n      handleRemove: handleRemove\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"SbG6CMM6FaXD5465NFUm02FT42U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/adria/Desktop/Code Your Future Stuff/GitHub Cloned Repositories/Full-Stack-Project-Assessment/client/src/App.js"],"names":["React","useState","VideosList","AddVideo","App","videos","setVideos","handleVote","id","direction","handleRemove","handleAddVideo","newVideo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMM,UAAU,GAAG,CAACC,EAAD,EAAKC,SAAL,KAAmB,CACpC;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAGF,EAAE,IAAI,CACzB;AACD,GAFD;;AAIA,QAAMG,cAAc,GAAGC,QAAQ,IAAI,CACjC;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,QAAD;AAAU,MAAA,cAAc,EAAED;AAA1B;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,UAAD;AACE,MAAA,MAAM,EAAEN,MADV;AAEE,MAAA,UAAU,EAAEE,UAFd;AAGE,MAAA,YAAY,EAAEG;AAHhB;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA5BD;;GAAMN,G;;KAAAA,G;AA8BN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport './App.css';\r\nimport VideosList from './VideosList';\r\nimport AddVideo from './AddVideo';\r\n\r\nconst App = () => {\r\n  const [videos, setVideos] = useState([]); \r\n\r\n  const handleVote = (id, direction) => {\r\n    // Implement the logic to update the vote count for the video with the given id\r\n  };\r\n\r\n  const handleRemove = id => {\r\n    // Implement the logic to remove the video with the given id from the list\r\n  };\r\n\r\n  const handleAddVideo = newVideo => {\r\n    // Implement the logic to add a new video to the list\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>Video Recommendation</h1>\r\n      </header>\r\n      <AddVideo handleAddVideo={handleAddVideo} />\r\n      <VideosList\r\n        videos={videos}\r\n        handleVote={handleVote}\r\n        handleRemove={handleRemove}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}